{"version":3,"sources":["components/Navbar.js","components/TextForms.js","components/Alert.js","App.js","index.js"],"names":["Navbar","props","className","mode","href","title","onClick","toggleMode","type","role","id","htmlFor","disable","TextForms","getTextLength","useState","text","setText","split","join","length","style","color","heading","value","rows","onChange","event","target","placeholder","disabled","toLowerCase","showAlert","toUpperCase","separateWord","i","charAt","substring","document","getElementById","select","navigator","clipboard","writeText","removeExtraSpaces","filter","element","toFixed","Alert","height","alert","xmlns","display","fill","viewBox","d","width","xlinkHref","msg","App","setMode","setAlert","setdisable","message","setTimeout","body","backgroundColor","defaultProps","ReactDOM","render"],"mappings":"uJAGe,SAASA,EAAOC,GAC3B,OACI,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACI,sBAAKD,UAAU,kBAAf,UACI,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,SAAsCH,EAAMI,QAC5C,sBAAKH,UAAS,sCAAgD,UAAfD,EAAME,KAAmB,OAAS,SAAjF,UACI,uBAAOD,UAAU,mBAAmBI,QAASL,EAAMM,WAAYC,KAAK,WAAWC,KAAK,SAASC,GAAG,2BAChG,wBAAOR,UAAU,mBAAmBS,QAAQ,yBAA5C,UAAsEV,EAAMW,QAA5E,uBCRL,SAASC,EAAUZ,GAC9B,IAsCIa,EAtCJ,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KA6CA,OALIH,EAD6B,MAA9BE,EAAKE,MAAM,OAAOC,KAAK,KACR,EAGAH,EAAKE,MAAM,OAAOC,KAAK,KAAKC,OAG3C,sBAAKlB,UAAU,iBAAf,UACI,oBAAImB,MAAO,CAACC,MAAqB,UAAbrB,EAAME,KAAe,QAAQ,SAAjD,SAA4DF,EAAMsB,UAClE,0BAAUrB,UAAU,oBAAoBQ,GAAG,QAAQc,MAAOR,EAAMS,KAAK,IAAIC,SAdzD,SAACC,GACpBV,EAAQU,EAAMC,OAAOJ,QAaiFK,YAAY,yBAC/G,wBAAQC,SAAwB,IAAdd,EAAKI,OAAYZ,KAAK,SAASF,QAhDlC,WAClBW,EAAQD,EAAKe,eACb9B,EAAM+B,UAAU,4BA8C4D9B,UAAU,4BAAnF,kCACA,wBAAQ4B,SAAwB,IAAdd,EAAKI,OAAYZ,KAAK,SAASF,QA7ClC,WAClBW,EAAQD,EAAKiB,eACbhC,EAAM+B,UAAU,4BA2C4D9B,UAAU,4BAAnF,kCACA,wBAAQ4B,SAAwB,IAAdd,EAAKI,OAAYZ,KAAK,SAASF,QA1CjC,WAEnB,IADA,IAAI4B,EAAelB,EAAKe,cAAcb,MAAM,KACpCiB,EAAE,EAAGA,EAAED,EAAad,OAAQe,IAChCD,EAAaC,GAAKD,EAAaC,GAAGC,OAAO,GAAGH,cAAcC,EAAaC,GAAGE,UAAU,GAExFpB,EAAQiB,EAAaf,KAAK,MAC1BlB,EAAM+B,UAAU,yBAoC6D9B,UAAU,4BAApF,mCACA,wBAAQ4B,SAAwB,IAAdd,EAAKI,OAAYZ,KAAK,SAASF,QAnC/B,WAErBW,EADgB,IAEhBhB,EAAM+B,UAAU,yBAgC+D9B,UAAU,4BAAtF,wBACA,wBAAQ4B,SAAwB,IAAdd,EAAKI,OAAYZ,KAAK,SAASF,QA/BhC,WACNgC,SAASC,eAAe,SAC9BC,SACRC,UAAUC,UAAUC,UAAU3B,GAC9Bf,EAAM+B,UAAU,6BA2B8D9B,UAAU,4BAArF,uBACA,wBAAQ4B,SAAwB,IAAdd,EAAKI,OAAYZ,KAAK,SAASF,QA1BpB,WAChC,IAAIsC,EAAoB5B,EAAKE,MAAM,OACnCD,EAAQ2B,EAAkBzB,KAAK,MAC/BlB,EAAM+B,UAAU,8BAuB0E9B,UAAU,4BAAjG,iCACA,uBACA,sBAAKA,UAAU,iBAAf,UACK,oBAAImB,MAAO,CAACC,MAAqB,UAAbrB,EAAME,KAAe,QAAQ,SAAjD,SAA4DF,EAAMI,QAClE,oBAAGgB,MAAO,CAACC,MAAqB,UAAbrB,EAAME,KAAe,QAAQ,SAAhD,UAA0D,4BAAIa,EAAKE,MAAM,OAAO2B,QAAO,SAACC,GAAW,OAAwB,IAAjBA,EAAQ1B,UAAaA,SAA/H,cAAqJ,4BAAIN,IAAzJ,iBACA,oBAAGO,MAAO,CAACC,MAAqB,UAAbrB,EAAME,KAAe,QAAQ,SAAhD,UAA0D,6BAAK,KAAMW,GAAeiC,QAAQ,KAA5F,4BC5DD,SAASC,EAAM/C,GAC1B,OACI,qBAAKoB,MAAO,CAAC4B,OAAQ,QAArB,SACKhD,EAAMiD,OAAS,qCACZ,sBAAKC,MAAM,6BAA6B9B,MAAO,CAAC+B,QAAS,QAAzD,UACI,wBAAQ1C,GAAG,oBAAoB2C,KAAK,eAAeC,QAAQ,YAA3D,SACI,sBAAMC,EAAE,8LAEZ,wBAAQ7C,GAAG,YAAY2C,KAAK,eAAeC,QAAQ,YAAnD,SACI,sBAAMC,EAAE,wRAEZ,wBAAQ7C,GAAG,4BAA4B2C,KAAK,eAAeC,QAAQ,YAAnE,SACI,sBAAMC,EAAE,gQAGhB,sBAAKrD,UAAU,gDAAgDO,KAAK,QAApE,UACI,qBAAKP,UAAU,wBAAwBsD,MAAM,KAAKP,OAAO,KAAKxC,KAAK,MAAM,aAAW,WAApF,SAA+F,qBAAKgD,UAAU,yBAC9G,8BAAMxD,EAAMiD,MAAMQ,cCdvB,SAASC,IACpB,MAAwB5C,mBAAS,SAAjC,mBAAOZ,EAAP,KAAayD,EAAb,KACA,EAA0B7C,mBAAS,MAAnC,mBAAOmC,EAAP,KAAcW,EAAd,KACA,EAA8B9C,mBAAS,UAAvC,mBAAOH,EAAP,KAAgBkD,EAAhB,KACM9B,EAAY,SAAC+B,EAASvD,GACxBqD,EAAS,CACLH,IAAKK,EACLvD,KAAMA,IAEVwD,YAAW,WACPH,EAAS,QACX,MAgBN,OACI,qCACI,cAAC7D,EAAD,CAAQK,MAAM,YAAYF,KAAMA,EAAMI,WAhB3B,WACL,UAAPJ,GACCyD,EAAQ,QACRE,EAAW,WACXxB,SAAS2B,KAAK5C,MAAM6C,gBAAkB,UACtClC,EAAU,6CAGV4B,EAAQ,SACRE,EAAW,UACXxB,SAAS2B,KAAK5C,MAAM6C,gBAAkB,UACtClC,EAAU,8CAKoDpB,QAASA,IACvE,cAACoC,EAAD,CAAOE,MAAOA,IACd,cAACrC,EAAD,CAAWU,QAAQ,kCAAkClB,MAAM,oBAAoBF,KAAMA,EAAM6B,UAAWA,OHflHhC,EAAOmE,aAAe,CAClB9D,MAAO,UIlBX+D,IAASC,OACP,mCACE,cAACV,EAAD,MAEFrB,SAASC,eAAe,W","file":"static/js/main.abc7d375.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default function Navbar(props) {\n    return (\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n            <div className=\"container-fluid\">\n                <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\n                <div className={`form-check form-switch text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}>\n                    <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\n                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.disable} DarkMode</label>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired\n};\n\nNavbar.defaultProps = {\n    title: \"Navbar\"\n}","import React, {useState} from 'react'\n\nexport default function TextForms(props) {\n    const [text, setText] = useState(\"\")\n    const handleLoClick = ()=>{\n        setText(text.toLowerCase())\n        props.showAlert(\"Converted to LowerCase!\")\n    }\n    const handleUpClick = ()=>{\n        setText(text.toUpperCase())\n        props.showAlert(\"Converted to UpperCase!\")\n    }\n    const handleCapClick = ()=>{\n        let separateWord = text.toLowerCase().split(' ');\n        for(var i=0; i<separateWord.length; i++){\n            separateWord[i] = separateWord[i].charAt(0).toUpperCase()+separateWord[i].substring(1);\n        }\n        setText(separateWord.join(\" \"))\n        props.showAlert(\"Text is Capitalized!\")\n    }\n    const handleClearClick = ()=>{\n        let clearText = \"\"\n        setText(clearText)\n        props.showAlert(\"All text is Cleared!\")\n    }\n    const handleCopyClick = ()=>{\n        let mySelec = document.getElementById(\"myBox\")\n        mySelec.select()\n        navigator.clipboard.writeText(text)\n        props.showAlert(\"Text Copied Sucessfully!\")\n    }\n    const handleRemoveExtraSpaceClick = ()=>{\n        let removeExtraSpaces = text.split(/\\s+/)\n        setText(removeExtraSpaces.join(\" \"))\n        props.showAlert(\"Extra Spaces are removed!\")\n    }\n\n    const handleOnChange = (event)=>{\n        setText(event.target.value)\n    }\n\n    let getTextLength \n    if(text.split(/\\s+/).join(\" \")===\" \"){\n        getTextLength=0\n    }\n    else{\n        getTextLength=text.split(/\\s+/).join(\" \").length\n    }\n    return (\n       <div className=\"container my-4\">\n           <h1 style={{color : props.mode===\"light\"?\"black\":\"white\"}}>{props.heading}</h1>\n           <textarea className=\"form-control my-2\" id=\"myBox\" value={text} rows=\"7\" onChange={handleOnChange} placeholder=\"Enter your Text here\"></textarea>\n           <button disabled={text.length===0} type=\"button\" onClick={handleLoClick} className=\"btn btn-primary my-2 mx-2\">Convert to LowerCase</button>\n           <button disabled={text.length===0} type=\"button\" onClick={handleUpClick} className=\"btn btn-primary my-2 mx-2\">Convert to UpperCase</button>\n           <button disabled={text.length===0} type=\"button\" onClick={handleCapClick} className=\"btn btn-primary my-2 mx-2\">Capitalize First Word</button>\n           <button disabled={text.length===0} type=\"button\" onClick={handleClearClick} className=\"btn btn-primary my-2 mx-2\">Clear Text</button>\n           <button disabled={text.length===0} type=\"button\" onClick={handleCopyClick} className=\"btn btn-primary my-2 mx-2\">Copy Text</button>\n           <button disabled={text.length===0} type=\"button\" onClick={handleRemoveExtraSpaceClick} className=\"btn btn-primary my-2 mx-2\">Remove Extra Spaces</button>\n           <hr />\n           <div className=\"container my-2\">\n                <h1 style={{color : props.mode===\"light\"?\"black\":\"white\"}}>{props.title}</h1>\n                <p style={{color : props.mode===\"light\"?\"black\":\"white\"}}><b>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length}</b> words and <b>{getTextLength}</b> characters</p>\n                <p style={{color : props.mode===\"light\"?\"black\":\"white\"}}><b>{(0.008*getTextLength).toFixed(2)}</b> minutes to read</p>\n            </div>\n       </div>\n    )\n}","import React from 'react'\n\nexport default function Alert(props) {\n    return (\n        <div style={{height: \"30px\"}}>\n            {props.alert && <>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" style={{display: \"none\"}}>\n                    <symbol id=\"check-circle-fill\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n                        <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\"/>\n                    </symbol>\n                    <symbol id=\"info-fill\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n                        <path d=\"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z\"/>\n                    </symbol>\n                    <symbol id=\"exclamation-triangle-fill\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n                        <path d=\"M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z\"/>\n                    </symbol>\n            </svg>\n                <div className=\"alert alert-success d-flex align-items-center\" role=\"alert\">\n                    <svg className=\"bi flex-shrink-0 me-2\" width=\"24\" height=\"24\" role=\"img\" aria-label=\"Success:\"><use xlinkHref=\"#check-circle-fill\"/></svg>\n                    <div>{props.alert.msg}</div>\n                </div>\n            </>} \n        </div>\n    )\n}\n","import React, {useState} from 'react'\nimport Navbar from \"./components/Navbar\"\nimport TextForms from \"./components/TextForms\"\nimport Alert from './components/Alert'\n\nexport default function App() {\n    const [mode, setMode] = useState(\"light\")\n    const [alert, setAlert] = useState(null)\n    const [disable, setdisable] = useState(\"Enable\")\n    const showAlert = (message, type)=>{\n        setAlert({\n            msg: message,\n            type: type\n        })\n        setTimeout(()=>{\n            setAlert(null)\n        },1000)\n    }\n    const toggleMode = ()=>{\n        if(mode===\"light\"){\n            setMode(\"dark\")\n            setdisable(\"Disable\")\n            document.body.style.backgroundColor = \"#181818\"\n            showAlert(\"Dark Mode has been sucessfully enabled \")\n        }\n        else{\n            setMode(\"light\")\n            setdisable(\"Enable\")\n            document.body.style.backgroundColor = \"#ffffff\"\n            showAlert(\"Dark Mode has been sucessfully disabled \")\n        }\n    }\n    return (\n        <>\n            <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} disable={disable} />\n            <Alert alert={alert} />\n            <TextForms heading=\"Enter the text to analyse below\" title=\"Your Text Summary\" mode={mode} showAlert={showAlert} />\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\"\n\nReactDOM.render(\n  <>\n    <App />\n  </>, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}